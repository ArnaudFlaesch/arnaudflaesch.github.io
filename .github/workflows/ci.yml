name: Node.js CI

on: ["push", "workflow_dispatch"]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.14.0
          cache: "npm"

      - name: Cache node modules
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: |
          npm run lint:styles
          npm run lint:styles:report
        # npm run eslint

      - name: Build
        env:
          PORTFOLIO_GITHUB_TOKEN: ${{secrets.PORTFOLIO_GITHUB_TOKEN}}
        run: |
          npm run clean
          npm run build

      - name: Tests
        uses: cypress-io/github-action@v6
        id: e2e-tests
        with:
          browser: firefox
          config-file: cypress-test.config.ts
          start: npm start
          wait-on: "http://localhost:3000"

      - name: Generate test report
        id: generate-e2e-report
        if: always() && steps.e2e-tests.outcome == 'failure'
        run: |
          mkdir cypress/screenshots || true
          npx mochawesome-merge ./cypress/results/mochawesome-report/*.json > tests-report.json
          npx marge tests-report.json -o cypress/reports/html
          cp -r cypress/screenshots cypress/reports/html/screenshots

      - name: Upload Cypress report
        uses: actions/upload-artifact@v4
        if: always() && steps.generate-e2e-report.outcome == 'success'
        with:
          name: Cypress report
          path: cypress/reports/html

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Create static folder
        env:
          PORTFOLIO_GITHUB_TOKEN: ${{secrets.PORTFOLIO_GITHUB_TOKEN}}
        if: success() && github.ref_name == 'master'
        run: |
          npm run clean
          npx nuxt generate --preset github_pages

      - name: Upload pages artifact
        uses: actions/upload-pages-artifact@v3
        if: success() && github.ref_name == 'master'
        with:
          path: .output/public

  deploy:
    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    needs: test
    if: success() && github.ref_name == 'master'

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
